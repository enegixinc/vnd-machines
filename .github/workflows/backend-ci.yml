name: Backend CI

on:
  push:
    branches:
      - 'main'

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Evaluate affected
        uses: leanix/nx-affected-dependencies-action@v0.2.1
        id: affected
        with:
          project: pathfinder
          base: ${{ github.sha }}~1
          head: ${{ github.sha }}

      - name: Run Unit Tests (Affected)
        if: steps.affected.outputs.isAffected == 'true'
        env:
          affectedDeps: ${{ steps.affected.outputs.affectedDeps }}
#        run: pnpx nx run-many --target=test --projects=$affectedDeps
        run: echo "Effecting Deps:" + " " + $affectedDeps

#      - name: Run Lint (Affected)
#        if: steps.affected.outputs.isAffected == 'true'
#        env:
#          affectedDeps: ${{ steps.affected.outputs.affectedDeps }}


#      - name: Notify Slack
#        run: |
#          curl -X POST -H 'Content-type: application/json' --data \
#          '{"channel": "#kingo", "username": "5oStudios", "text": "New Build Starts!, project: `game`", "icon_emoji": ":5ostudios:"}' \
#            ${{ secrets.SLACK_WEBHOOK }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        id: setup_qemu

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: setup_buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        id: login_to_docker_hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          file: apps/backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/vnd-dev-backend:latest

#      - name: Notify Slack
#        run: |
#          curl -X POST -H 'Content-type: application/json' --data \
#          '{"channel": "#kingo", "username": "5oStudios", "text": "Build Success!, project `game`", "icon_emoji": ":5ostudios:"}' \
#            ${{ secrets.SLACK_WEBHOOK }}
#
#      - name: Deploy to Staging
#        run: |
#          curl -X GET \
#            -H "Authorization: Bearer ${{ secrets.COOLIFY_KEY_FRONTEND_STAGING }}" \
#              ${{ secrets.COOLIFY_WEBHOOK_FRONTEND_STAGING }}
