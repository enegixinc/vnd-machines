name: Backend CI

on:
  push:
  pull_request:


jobs:
  code-check:
    name: Check formatting, linting, vetting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prettify code
        uses: creyD/prettier_action@v4.3

  install-and-cache:
    runs-on: ubuntu-latest
    name: Install and Cache Dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install


  evaluate-affected-projects:
    name: Evaluate Affected Projects
    runs-on: ubuntu-latest
    needs: install-and-cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - uses: nrwl/nx-set-shas@v4

      - run: |
          if [ ! -n "$(git show-ref refs/heads/main)" ]; then
            git branch --track main origin/main
          else
            echo "Branch 'main' already exists. Skipping branch creation."
          fi

      - run: pnpm i nx -g
      - run: nx affected:lint --fix --parallel
#      - run: nx affected -t format:write,test,build,e2e --parallel
      - run: nx affected -t format:write,test,deploy --parallel


#      - name: Check for Affected Projects
#        uses: dkhunt27/action-nx-affected-list@v5
#        id: checkForAffected
#
#      - if: steps.checkForAffected.outputs.hasAffected == 'true'
#        name: Build (Nx Affected)
#        uses: mansagroup/nrwl-nx-action@v3
#        with:
#          targets: build
#          affected: true
#          nxCloud: false


#  backend:
#    runs-on: ubuntu-latest
#    steps:
#      - if: steps.checkForAffected.outputs.hasAffected == 'true'
#        name: Build (Nx Affected)
#        uses: mansagroup/nrwl-nx-action@v2
#        with:
#          targets: build
#          affected: true
#          nxCloud: false
#
#      - name: Notify Slack
#        run: |
#          curl -X POST -H 'Content-type: application/json' --data \
#          '{"channel": "#kingo", "username": "5oStudios", "text": "New Build Starts!, project: `game`", "icon_emoji": ":5ostudios:"}' \
#            ${{ secrets.SLACK_WEBHOOK }}

#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#        id: setup_qemu
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#        id: setup_buildx
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        id: login_to_docker_hub
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v5
#        with:
#          file: apps/backend/Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/vnd-dev-backend:latest

#      - name: Notify Slack
#        run: |
#          curl -X POST -H 'Content-type: application/json' --data \
#          '{"channel": "#kingo", "username": "5oStudios", "text": "Build Success!, project `game`", "icon_emoji": ":5ostudios:"}' \
#            ${{ secrets.SLACK_WEBHOOK }}
#
#      - name: Deploy to Staging
#        run: |
#          curl -X GET \
#            -H "Authorization: Bearer ${{ secrets.COOLIFY_KEY_FRONTEND_STAGING }}" \
#              ${{ secrets.COOLIFY_WEBHOOK_FRONTEND_STAGING }}
