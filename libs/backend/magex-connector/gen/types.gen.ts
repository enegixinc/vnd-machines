// This file is auto-generated by @hey-api/openapi-ts

import { CreateBrandResponse, NewBrand } from '../types/brand';
import { CategoriesByAccountNameResponse } from '../types/category';
import { GetProductResponse } from '../types';

export type PostUsersLoginData = {
  formData?: {
    email?: string;
    password?: string;
  };
};

export type PostUsersLoginResponse = {
  accessToken: string;
};

export type GetGroupsAndMachinesByAccountNameData = {
  accountName: string;
  authToken?: string;
};

export type GetGroupsAndMachinesByAccountNameResponse = unknown;

export type PostMachinesEdit657Ab833C7201F469894300DData = {
  authToken?: string;
  formData?: {
    description?: string;
    tax?: number;
    name?: number;
  };
};

export type PostMachinesEdit657Ab833C7201F469894300DResponse = unknown;

export type GetPublicMachinesBySerialData = {
  authToken?: string;
  serial: number;
};

export type GetPublicMachinesBySerialResponse = unknown;

export type GetProductsByAccountNameData = {
  accountName: string;
};

export type GetProductsByAccountNameResponse = GetProductResponse;

export type GetProductByIdData = {
  id: string;
};

export type GetProductByIdResponse = unknown;

export type PutProductsEdit660Da97F7Ac1611998463602Data = {
  formData?: {
    name?: string;
    description?: string;
    detail?: string;
    ingredients?: string;
    allergens?: string;
    referTo?: string;
    auto?: boolean;
    upc?: number;
    barcode?: string;
    price?: number;
    pricePerKilo?: boolean;
    category?: string;
    brand?: string;
    pp?: string;
    length?: number;
    width?: number;
    height?: number;
    preImage1?: string;
    ageControl?: number;
    vatIndex?: number;
    virtualProduct?: number;
    sortIndex?: number;
  };
};

export type PutProductsEdit660Da97F7Ac1611998463602Response = unknown;

export type PostProductsCreateData = {
  formData?: {
    name?: string;
    description?: string;
    referTo?: string;
    auto?: boolean;
    upc?: string;
    barcode?: number;
    price?: number;
    costPrice?: number;
    pricePerKilo?: boolean;
    ingredients?: string;
    allergens?: string;
    detail?: string;
    category?: string;
    brand?: string;
    pp?: string;
    length?: number;
    width?: number;
    height?: number;
    ageControl?: number;
    vatIndex?: number;
    virtualProduct?: number;
    sortIndex?: number;
    image1?: Blob | File;
  };
};

export type PostProductsCreateResponse = unknown;

export type DeleteProductsDeleteByIdData = {
  id: string;
};

export type DeleteProductsDeleteByIdResponse = unknown;

export type GetCategoriesByAccountNameData = {
  accountName: string;
  authToken?: string;
};

export type GetCategoriesByAccountNameResponse =
  CategoriesByAccountNameResponse;

export type PutCategoriesEditByIdData = {
  authToken?: string;
  formData?: {
    name?: string;
    referTo?: string;
    auto?: string;
    sortIndex?: number;
  };
  id: string;
};

export type PutCategoriesEditByIdResponse = unknown;

export type PostCategoriesCreateData = {
  authToken?: string;
  formData?: {
    name?: string;
    referTo?: string;
    auto?: boolean;
    sortIndex?: number;
    categoryPicture?: Blob | File;
  };
};

export type PostCategoriesCreateResponse = unknown;

export type GetGroupsAndMachinesForReportByAccountEmailData = {
  accountEmail: string;
  authToken?: string;
};

export type GetGroupsAndMachinesForReportByAccountEmailResponse = unknown;

export type PostOrdersData = {
  authToken?: string;
  formData?: {
    start?: string;
    end?: string;
    id?: string;
    /**
     * Comma separated Machine IDs
     */
    ids?: string;
  };
};

export type PostOrdersResponse = unknown;

export type PostUsersGetAllEmployeesData = {
  authToken?: string;
  formData?: {
    id?: string;
  };
};

export type PostUsersGetAllEmployeesResponse = unknown;

export type PostUsersCreateData = {
  authToken?: string;
  requestBody?: string;
};

export type PostUsersCreateResponse = unknown;

export type GetStockLogByMachineIdByFromDateByToDateData = {
  authToken?: string;
  fromDate: string;
  machineId: string;
  toDate: string;
};

export type GetStockLogByMachineIdByFromDateByToDateResponse = unknown;

export type GetBrandsByAccountNameData = {
  accountName: string;
  authToken?: string;
};

export type GetBrandsByAccountNameResponse = NewBrand[];

export type PostBrandsEditByIdData = {
  authToken?: string;
  formData?: {
    name?: string;
    referTo?: string;
  };
  /**
   * Brand ID
   */
  id: string;
};

export type PostBrandsEditByIdResponse = unknown;

export type PostBrandsCreateData = {
  authToken?: string;
  formData?: {
    name?: string;
    referTo?: string;
    picture?: Blob | File;
  };
};

export type PostBrandsCreateResponse = CreateBrandResponse;

export type $OpenApiTs = {
  '/users/login': {
    post: {
      req: PostUsersLoginData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/groupsAndMachines/{accountName}': {
    get: {
      req: GetGroupsAndMachinesByAccountNameData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/machines/edit/657ab833c7201f469894300d': {
    post: {
      req: PostMachinesEdit657Ab833C7201F469894300DData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/public/machines/{serial}': {
    get: {
      req: GetPublicMachinesBySerialData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/products/{accountName}': {
    get: {
      req: GetProductsByAccountNameData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/product/{_id}': {
    get: {
      req: GetProductByIdData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/products/edit/660da97f7ac1611998463602': {
    put: {
      req: PutProductsEdit660Da97F7Ac1611998463602Data;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/products/create': {
    post: {
      req: PostProductsCreateData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/products/delete/{_id}': {
    delete: {
      req: DeleteProductsDeleteByIdData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/categories/{accountName}': {
    get: {
      req: GetCategoriesByAccountNameData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/categories/edit/{_id}': {
    put: {
      req: PutCategoriesEditByIdData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/categories/create': {
    post: {
      req: PostCategoriesCreateData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/groupsAndMachinesForReport/{accountEmail}': {
    get: {
      req: GetGroupsAndMachinesForReportByAccountEmailData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/orders': {
    post: {
      req: PostOrdersData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/users/getAllEmployees': {
    post: {
      req: PostUsersGetAllEmployeesData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/users/create': {
    post: {
      req: PostUsersCreateData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/stockLog/{machine_id}/{from_date}/{to_date}': {
    get: {
      req: GetStockLogByMachineIdByFromDateByToDateData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/brands/{accountName}': {
    get: {
      req: GetBrandsByAccountNameData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/brands/edit/{_id}': {
    post: {
      req: PostBrandsEditByIdData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
  '/brands/create': {
    post: {
      req: PostBrandsCreateData;
      res: {
        /**
         * Successful response
         */
        200: unknown;
      };
    };
  };
};
